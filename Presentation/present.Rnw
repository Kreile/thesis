\documentclass[english]{beamer}
%% The most common packages are already included in:
\usetheme{biostat}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
\usepackage{amsmath,amsfonts,tikz, amssymb}
\usetikzlibrary{trees}

%% Header data: (adjust to your needs:
\def\uzhunit{Biostatistics}             %% if (not) needed comment/uncomment
%\def\uzhunitext{STA480}

\title{Publication Bias in Meta-Analysis}%[Publication Bias]
%% Optional Argument in [Brackets]: Short Title for Footline

%% The following are all optional, simply comment them
%\subtitle{Publication Bias in the Cochrane Libary}
%\institute{Biostatistics Journal Club}  %% optional
\author{Giuachin Kreiliger}
%\date{\today}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 

<<include = FALSE>>= 
library(knitr)
PATH_HOME = path.expand("~") # user home
PATH = file.path(PATH_HOME, 'Data/PubBias')
PATH2 = file.path(PATH_HOME, 'PubBias')
FILE = 'cochrane_2018-06-09.csv'
PATH_DATA = file.path(PATH, 'data')
PATH_CODE = file.path(PATH2, 'code')
PATH_RESULTS = file.path(PATH2, 'results')
PATH_FIGURES = file.path(PATH_RESULTS, 'figures')

file_results = "pb.RData"

source(file.path(PATH_CODE, 'PubBias_functions.R'))

file.dat <- "data.RData"
if (file.exists(file.path(PATH_RESULTS, file.dat))) {
  load(file.path(PATH_RESULTS, file.dat))
} else {
  data = pb.readData(path = PATH_DATA, file = FILE)
	tmp = pb.clean(data)
	data = tmp[[1]]
	aliases = tmp[[2]]
  save(data, file =  file.path(PATH_RESULTS, file.dat))
}


load(file.path(PATH_RESULTS, file = "data.processed.RData"))

require(tidyverse)
require(meta)
require(xtable)




meta.id <- function(meta.id.tolook){
	dt <- data.ext %>% filter(meta.id == meta.id.tolook)
	if(any(is.na(dt$events1)) | all(dt$events1 == 0)){
		meta.ex <- metacont(n.e = total1, mean.e = mean1, sd.e = sd1, n.c = total2, mean.c = mean2, sd.c = sd2, studlab = study.name, data = dt)
	} else{
		meta.ex <- metabin(event.e = events1, n.e = total1, event.c = events2, n.c = total2, studlab = study.name, sm = "RR", data = dt, method = "Inverse")
	}
	return(meta.ex)
}

funnel.id <- function(meta.id.tolook){
	funnel(meta.id(meta.id.tolook))
}

trimfill.id <- function(meta.id.tolook){
	funnel(trimfill(meta.id(meta.id.tolook)))
}

limitmeta.id <- function(meta.id.tolook){
	funnel(limitmeta(meta.id(meta.id.tolook)))
}

copas.id <- function(meta.id.tolook){
	auto.copas(meta.id(meta.id.tolook), 0.1)
}

setting.id <- function(meta.id.tolook){
	return(meta %>% filter(meta.id == meta.id.tolook) %>% select(comparison.name, comparison.nr, outcome.name, sungroup.name))
}

est.id <- function(meta.id.tolook){
	return(meta %>% filter(meta.id == meta.id.tolook) %>% select(est.fixef, est.ranef, est.copas, est.trimfill.fixef, est.reg.ranef))
}

single.study.id <- function(meta.id.tolook){
	return(print(data.ext %>% filter(meta.id == meta.id.tolook) %>% select(study.name, effect, se, total1, total2, events1, events2, mean1, mean2) %>% 
							 	arrange(se), n = 200))
}
	

#Meta-analysis example
data.ext <- data.ext %>% mutate(study.year = ifelse(study.year < 2019, study.year, NA)) %>% 
    mutate(study.year = ifelse(study.year > 1920, study.year, NA))
biased.rev <- data.ext %>% filter(meta.id == 122943)
unbiased.rev <- data.ext %>% filter(meta.id == 181863)
meta.example <- metacont(n.e = total1, mean.e = mean1, sd.e = sd1, n.c = total2, mean.c = mean2, sd.c = sd2, 
												 studlab = study.name, data = biased.rev)
meta.nexample <- metacont(n.e = total1, mean.e = mean1, sd.e = sd1, n.c = total2, mean.c = mean2, sd.c = sd2, 
												 studlab = study.name, data = unbiased.rev)

#Barbiturate Examples
barbi1 <- arrange(filter(data, file.nr == 21) %>%
          select(Study = study.name, Comparison = comparison.name, Outcome = outcome.name,
                 Events = events1, Total = total1, Events_c = events2, Total_c = total2) %>%
            slice(c(1,3)), Study)
barbi1 <- barbi1 %>% mutate(Comparison = "Barbiturate vs ..", Outcome = "Death at ..")

barbi2 <- arrange(filter(data, file.nr == 21) %>%
          select(Study = study.name, Comparison = comparison.name,Outcome = outcome.name,
                 Events = events1, Total = total1, Events_c = events2, Total_c = total2), Study) %>% group_by(Comparison) %>% distinct(Outcome, .keep_all = T)
barbi2[barbi2$Study == "P\303\251rez-B\303\241rcena 2008", 1] = "Perez-Barcena 2008"

barbi2$Comparison <- strtrim(barbi2$Comparison, 19)
barbi2$Outcome <- strtrim(barbi2$Outcome, 19)

#Missing values
cont.out <- data %>% filter(outcome.measure.new == "Mean Difference" | outcome.measure.new == "Std. Mean Difference" |
                                 outcome.measure.new == "Hedges' G")

missing.mean <- which(is.na(cont.out$mean1) | is.na(cont.out$mean2))
missing.effect <- which(is.na(cont.out$effect))
missing.means <- intersect(missing.mean, missing.effect) #Cont. results that have neither complete means nor an effect
wrong.effect <- which(cont.out$mean1 == 0 & cont.out$mean2 == 0 & cont.out$effect == 0) #Cont.results that have only zeros
missing.effects <- length(c(missing.means, wrong.effect))

missing.sd <- which(is.na(cont.out$sd1) | is.na(cont.out$sd2))
missing.se <- which(is.na(cont.out$se))
missing.sds <- intersect(missing.se, missing.sd) #Cont. results that have neither complete means nor an effect
wrong.sds <- which(cont.out$sd1 == 0 & cont.out$sd2 == 0 & cont.out$se == 0) #Cont.results that have only zeros
missing.sds <- length(c(missing.sds, wrong.sds))

missing.ss <- which(is.na(data$total1) | is.na(data$total2))
wrong.ss <- which(data$total1 <= 0 | data$total2 <= 0)
missing.ssize <- length(c(missing.ss, wrong.ss))

missing.year <- sum(is.na(data$study.year)) + length(c(which(data$study.year < 1920), which(data$study.year > 2019)))

missing.table <- rbind("Missing mean values and mean differences" = missing.effects,
                         "Missing standard deviations and standard errors" = missing.sds,
                         "Missing sample sizes" = missing.ssize,
                         "Missing study year" = missing.year)

#Dataset properties:
#Review level
study.rev <- data %>% group_by(file.nr) %>% distinct(study.name) %>% count() %>% ungroup() %>% 
	summarise(lower = quantile(n, 0.05), median = quantile(n, 0.5), mean = mean(n), upper = quantile(n, 0.95))
comparison.rev <- data %>% group_by(file.nr) %>% distinct(comparison.name) %>% count() %>% ungroup() %>% 
	summarise(lower = quantile(n, 0.05), median = quantile(n, 0.5), mean = mean(n), upper = quantile(n, 0.95))
meta.rev <- data.ext %>% group_by(file.nr) %>% distinct(meta.id) %>% count() %>% ungroup() %>% 
	summarise(lower = quantile(n, 0.05), median = quantile(n, 0.5), mean = mean(n), upper = quantile(n, 0.95))

#Global level
study.years <- data.ext %>% group_by(file.nr) %>% distinct(study.name, .keep_all = T) %>% ungroup() %>% 
	summarise(lower = quantile(study.year, 0.05, na.rm = T), median = quantile(study.year, 0.5, na.rm = T),
						mean = mean(study.year, na.rm = T), upper = quantile(study.year, 0.95, na.rm = T))
sample.size <- data.ext %>% group_by(file.nr) %>% distinct(study.name, .keep_all = T) %>% ungroup() %>% 
	mutate(samplesize = total1 + total2) %>% 
	summarise(lower = quantile(samplesize, 0.05, na.rm = T), median = quantile(samplesize, 0.5, na.rm = T),
						mean = mean(samplesize, na.rm = T), upper = quantile(samplesize, 0.95, na.rm = T))

dataset.properties <- rbind(study.rev, comparison.rev, meta.rev, study.years, sample.size)
rownames(dataset.properties) <- c("Number of studies", "Number of comparisons", "Number of meta-analyses", "Study years", "Study sample size")
colnames(dataset.properties) <- c("5% quantile", "median", "mean", "95% quantile")

#Pooling studies
cum.repr.trials.subg <- data %>% group_by(file.nr, comparison.nr, outcome.nr, subgroup.nr) %>% count %>% group_by(n) %>% count %>%
  filter(n < 10) %>%
  full_join( data %>% group_by(file.nr, comparison.nr, outcome.nr) %>% count %>% group_by(n) %>% count %>%
               filter(n > 9) %>% ungroup %>% summarise(n = 10, nn = sum(nn))) %>%
  ungroup() %>% arrange(desc(n)) %>% mutate(csum  = cumsum(nn)) %>% arrange(n)

colnames(cum.repr.trials.subg)  <- c("n","Number of groups", "Cumulative sum of groups")

#Loading meta-analysis results:
file.bin <- "pb.bin.RData"
load(file.path(PATH_RESULTS, file.bin))

file.cont <- "pb.cont.RData"
load(file.path(PATH_RESULTS, file.cont))

file.meta <- "meta.RData"
load(file.path(PATH_RESULTS, file.meta))

library(gridExtra)

meta.id <- function(meta.id.tolook){
	dt <- data.ext %>% filter(meta.id == meta.id.tolook)
	if(any(is.na(dt$events1)) | all(dt$events1 == 0)){
		meta.ex <- metacont(n.e = total1, mean.e = mean1, sd.e = sd1, n.c = total2, mean.c = mean2, sd.c = sd2, studlab = study.name, data = dt)
	} else{
		meta.ex <- metabin(event.e = events1, n.e = total1, event.c = events2, n.c = total2, studlab = study.name, sm = "RR", data = dt)
	}
	return(meta.ex)
}



#Meta filtering: 
metac.bin <- meta.bin %>% filter(n.sig.type.bin > 1) %>% filter((se.max^2)/(se.min^2) > 4) %>% filter(I2 < 0.5)
metac.cont <- meta.cont %>% filter(n.sig.type.cont > 1) %>% filter((se.max^2)/(se.min^2) > 4) %>% filter(I2 < 0.5)
metac <- meta %>% filter(n.sig.type > 1) %>% filter((se.max^2)/(se.min^2) > 4) %>% filter(I2 < 0.5)


#Significant proportion
test.bin <- metac.bin %>% ungroup() %>% summarize(egger.test = mean(egger.test),
                                                          schwarzer.test = mean(schwarzer.test),
                                                          rucker.test = mean(rucker.test),
                                                          harbord.test = mean(harbord.test),
                                                          peter.test = mean(peter.test))
test.bin <- test.bin %>% gather(key = "test.type", value = "mean")

p.bin <- metac.bin %>% ungroup() %>% 
  select(egger.test, schwarzer.test, rucker.test, harbord.test, peter.test) %>% 
  gather(key = "test.type", value = "null.hypothesis") %>%  
  mutate(null.hypothesis = factor(ifelse(null.hypothesis == 1, "significant", "not significant"))) %>% 
  ggplot(aes(x = test.type, fill = null.hypothesis)) + geom_bar() + coord_flip() + 
  theme_bw() + xlab(label = NULL) + ggtitle("Binary Outcomes") + theme(legend.position = "top") +
  guides(fill=guide_legend(title=NULL))+
  annotate("text", x = test.bin$test.type, y = 500, 
           label = paste(round(test.bin$mean, 2)*100, "% rejected"), 
           color = "white")

test.cont <- metac.cont %>% ungroup() %>% summarize(egger.test = mean(egger.test),
                                                            begg.test = mean(begg.test),
                                                            thomson.test = mean(thomson.test))

test.cont <- test.cont %>% gather(key = "test.type", value = "mean")

p.cont <- metac.cont %>% ungroup() %>% 
  select(egger.test, thomson.test, begg.test) %>% 
  gather(key = "test.type", value = "null.hypothesis") %>% 
  mutate(null.hypothesis = factor(ifelse(null.hypothesis == 1, "significant", "not significant"))) %>% 
  ggplot(aes(x = test.type, fill = null.hypothesis)) + geom_bar() + coord_flip() + 
  theme_bw() + xlab(label = NULL) + ggtitle("Continuous Outcomes") + theme(legend.position = "top") +
	guides(fill=guide_legend(title=NULL))+
  annotate("text", x = test.cont$test.type, y = 150, 
           label = paste(round(test.cont$mean, 2)*100, "% rejected"), 
           color = "white")

dat_text <- data.frame(
  label = paste(c(sum(metac.cont$begg.test), sum(metac.cont$egger.test), sum(metac.cont$thomson.test)), "< 0.05,",
  							round(c(mean(metac.cont$begg.test), mean(metac.cont$egger.test), mean(metac.cont$thomson.test)),2)*100, "%"),
  test.type   = c("pval.begg.cont", "pval.egger.cont", "pval.thomson.cont"))

labels <- c(pval.begg.cont = "Begg Mazumdar", pval.egger.cont = "Egger", pval.thomson.cont = "Thompson Sharp")
p.dist.cont <- metac.cont %>% ungroup() %>% 
  select(pval.egger.cont, pval.thomson.cont, pval.begg.cont) %>% 
  gather(key = "test.type", value = "p.value") %>% 
  ggplot(aes(x = p.value)) + geom_histogram(bins = 20) + theme_bw() + 
	facet_wrap(~test.type, labeller = labeller(test.type = labels)) + 
	geom_text(data = dat_text, mapping = aes(x = 0.5, y = 25, label = label),  color = "black") + 
	theme(strip.text.x = element_text(size=15))


	dat_text <- data.frame(
  label = paste(c(sum(metac.bin$harbord.test), sum(metac.bin$peter.test), 
  										sum(metac.bin$rucker.test), sum(metac.bin$schwarzer.test)), "< 0.05,",
  							round(c(mean(metac.bin$harbord.test), mean(metac.bin$peter.test), 
  										mean(metac.bin$rucker.test), mean(metac.bin$schwarzer.test)),2)*100, "%"),
  test.type   = c("pval.harbord.bin", "pval.peter.bin", "pval.rucker.bin", "pval.schwarzer.bin"))

labels <- c(pval.harbord.bin = "Harbord", pval.peter.bin = "Peter", pval.rucker.bin = "Rucker", pval.schwarzer.bin = "Schwarzer")

p.dist.bin <- metac.bin %>% ungroup() %>% 
  select(pval.harbord.bin, pval.peter.bin, pval.rucker.bin, pval.schwarzer.bin) %>% 
  gather(key = "test.type", value = "p.value") %>% 
  ggplot(aes(x = p.value)) + geom_histogram(bins = 20) + theme_bw() + facet_wrap(~test.type, labeller = labeller(test.type = labels)) + 
	geom_text(data = dat_text, mapping = aes(x = 0.5, y = 100, label = label), color = "black") + 
	theme(strip.text.x = element_text(size=15))


#Test agreement
agree.bin <- metac.bin %>% mutate(n.sig = peter.test + rucker.test + egger.test + harbord.test + schwarzer.test) %>% 
  group_by(n.sig) %>% count %>% filter(n.sig > 0) %>% 
  ggplot(aes(y = nn, x = n.sig)) + theme_bw() + geom_col() + xlab("Number of significant tests") + ylab("count") + ggtitle("Binary Outcomes")

agree.cont <- metac.cont %>% mutate(n.sig = egger.test + thomson.test + begg.test) %>% 
  group_by(n.sig) %>% count %>% filter(n.sig > 0) %>% 
  ggplot(aes(y = nn, x = n.sig)) + theme_bw() + geom_col() + xlab("Number of significant tests") + ylab("count") + ggtitle("Continuous Outcomes")



#Adjustment example plots regression:
reg.1 <- qplot(x = biased.rev$se, y = biased.rev$effect, xlim = c(0, 1.2)) + geom_point() + 
	stat_smooth(method="lm", fullrange=TRUE, se = F) + coord_flip() + theme_bw() +
	ylab("Std. Mean Difference") + xlab("Standard error")

reg.2 <- qplot(x = unbiased.rev$se, y = unbiased.rev$effect, xlim = c(0, 6.5)) + geom_point() + 
	stat_smooth(method="lm", fullrange=TRUE, se = F) + coord_flip() + theme_bw() +
	ylab("Std. Mean Difference") + xlab("Standard error")

#Adjustment results: Effect difference histograms
effect.diff <- metac %>% mutate(
	est.fixef = ifelse(!is.na(est.fixef.bin), est.fixef - 1, est.fixef),
	est.ranef = ifelse(!is.na(est.fixef.bin), est.ranef - 1, est.ranef),
	est.trimfill.fixef = ifelse(!is.na(est.fixef.bin), est.trimfill.fixef - 1, est.trimfill.fixef),
	est.copas = ifelse(!is.na(est.fixef.bin), est.copas - 1, est.copas),
	est.reg.ranef = ifelse(!is.na(est.fixef.bin), est.reg.ranef - 1, est.reg.ranef),
	fixef.ranef = ifelse(abs(est.ranef) > abs(est.fixef), "Reduction", "Amplification"),
	fixef.trimfill = ifelse(abs(est.fixef) > abs(est.trimfill.fixef), "Reduction", "Amplification"),
	fixef.copas = ifelse(abs(est.fixef) > abs(est.copas), "Reduction", "Amplification"),
	fixef.reg = ifelse(abs(est.fixef) > abs(est.reg.ranef), "Reduction", "Amplification"),
	fixef.trimfill.s = ifelse(sign(est.fixef) == sign(est.trimfill.fixef), "Unchanged", "Reversed"),
	fixef.copas.s = ifelse(sign(est.fixef) == sign(est.copas), "Unchanged", "Reversed"),
	fixef.reg.s = ifelse(sign(est.fixef) == sign(est.reg.ranef), "Unchanged", "Reversed")) 

hist.ranef <- effect.diff %>% ggplot(aes(x = abs(est.fixef - est.ranef))) +
	geom_histogram() + facet_grid(~factor(fixef.ranef)) + xlim(0, 2) + xlab("Effect difference") + 
	theme_bw() + theme(legend.position = "bottom", strip.text.x = element_text(size=15)) + ylim(0, 250)


trimfill.miss <- effect.diff %>% group_by(fixef.trimfill) %>% mutate(dif = abs(est.fixef - est.trimfill.fixef)) %>% 
	filter(dif > 2) %>% mutate(label = round(dif, 1), type = !is.na(est.fixef.bin)) %>% arrange(label) %>% select(label, fixef.trimfill.s, meta.id, type)

trimfill.label <- data.frame(label = paste("missing:", c(paste(trimfill.miss$label[trimfill.miss$fixef.trimfill == "Reduction"], collapse = ", "),
																												 paste(trimfill.miss$label[trimfill.miss$fixef.trimfill == "Amplification"], collapse = ", "))),
														fixef.trimfill = unique(trimfill.miss$fixef.trimfill), 
														fixef.trimfill.s  = "Reversed")

trimfill.label$label <- as.character(trimfill.label$label)
trimfill.label$label[1] <- sub("2.5,", "2.5, \n   ", trimfill.label$label[1])


hist.trimfill <- effect.diff %>% ggplot(aes(x = abs(est.fixef - est.trimfill.fixef), fill = factor(fixef.trimfill.s))) +
	geom_histogram() + facet_grid(~factor(fixef.trimfill)) + xlim(0, 2)+ xlab("Effect difference") +
	geom_text(data = trimfill.label, mapping = aes(label = label, x = 0, hjust = 0, y = 300), 
						color = "black") + scale_fill_discrete(name="Effect direction") + theme_bw() + 
	theme(legend.position = "bottom", strip.text.x = element_text(size=15))

hist.trimfill1 <- effect.diff %>% ggplot(aes(x = abs(est.fixef - est.trimfill.fixef))) +
	geom_histogram() + facet_grid(~factor(fixef.trimfill)) + xlim(0, 2)+ xlab("Effect difference") +
	geom_text(data = trimfill.label, mapping = aes(label = label, x = 0, hjust = 0, y = 300), 
						color = "black") + theme_bw() + 
	theme(legend.position = "bottom", strip.text.x = element_text(size=15))

funnel(trimfill(meta.id(165815)))


copas.miss <- effect.diff %>% filter(!is.na(est.copas)) %>% group_by(fixef.copas) %>% mutate(dif = abs(est.fixef - est.copas)) %>% 
	filter(dif > 2) %>% mutate(label = round(dif, 1), type = !is.na(est.fixef.bin)) %>% arrange(label) %>% select(label, fixef.copas.s, meta.id, type)

copas.label <- data.frame(label = paste("missing:", c(paste(copas.miss$label[copas.miss$fixef.copas == "Reduction"], collapse = ", "),
																												 paste(copas.miss$label[copas.miss$fixef.copas == "Amplification"], collapse = ", "))),
														 fixef.copas = unique(copas.miss$fixef.copas), 
														 fixef.copas.s  = "Reversed")

copas.label$label <- as.character(copas.label$label)
copas.label$label[1] <- sub("3.5,", "3.5, \n   ", copas.label$label[1])
copas.label$label[2] <- sub("11.5,", "11.5, \n   ", copas.label$label[2])


hist.copas <- effect.diff %>% filter(!is.na(est.copas)) %>% ggplot(aes(x = abs(est.fixef - est.copas), fill = factor(fixef.copas.s))) +
	geom_histogram() + facet_grid(~factor(fixef.copas)) + xlim(0, 2) + xlab("Effect difference") +
	geom_text(data = copas.label, mapping = aes(label = label, x = 0, hjust = 0, y = 175), 
						color = "black") + scale_fill_discrete(name="Effect direction") + theme_bw() +
	theme(legend.position = "bottom", strip.text.x = element_text(size=15))

hist.copas1 <- effect.diff %>% filter(!is.na(est.copas)) %>% ggplot(aes(x = abs(est.fixef - est.copas))) +
	geom_histogram() + facet_grid(~factor(fixef.copas)) + xlim(0, 2) + xlab("Effect difference") +
	geom_text(data = copas.label, mapping = aes(label = label, x = 0, hjust = 0, y = 175), 
						color = "black") + theme_bw() +
	theme(legend.position = "bottom", strip.text.x = element_text(size=15))

funnel(meta.id(56200))

reg.ranef.miss <- effect.diff %>% group_by(fixef.reg) %>% mutate(dif = abs(est.fixef - est.reg.ranef)) %>% 
	filter(dif > 3) %>% mutate(label = round(dif, 1), type = !is.na(est.fixef.bin)) %>% arrange(label) %>% select(label, fixef.reg.s, meta.id, type)

reg.ranef.label <- data.frame(label = paste("missing:", c(paste(reg.ranef.miss$label[reg.ranef.miss$fixef.reg == "Reduction"], collapse = ", "),
																											paste(reg.ranef.miss$label[reg.ranef.miss$fixef.reg == "Amplification"], collapse = ", "))),
													fixef.reg = unique(reg.ranef.miss$fixef.reg), 
													fixef.reg.s  = "Reversed")

reg.ranef.label$label <- as.character(reg.ranef.label$label)
reg.ranef.label$label[1] <- sub("4.8,", "4.8,\n   ", reg.ranef.label$label[1])


hist.reg <- effect.diff %>% ggplot(aes(x = abs(est.fixef - est.reg.ranef), fill = factor(fixef.reg.s))) +
	geom_histogram() + facet_grid(~factor(fixef.reg)) + xlim(0, 3)+ xlab("Effect difference") +
	geom_text(data = reg.ranef.label, mapping = aes(label = label, x= 0, y = 250, hjust = 0), 
						color = "black", size = 2.8) + theme_bw() + scale_fill_discrete(name="Effect direction") +
	theme(legend.position = "bottom", strip.text.x = element_text(size=15))

hist.reg1 <- effect.diff %>% ggplot(aes(x = abs(est.fixef - est.reg.ranef))) +
	geom_histogram() + facet_grid(~factor(fixef.reg)) + xlim(0, 3)+ xlab("Effect difference") +
	geom_text(data = reg.ranef.label, mapping = aes(label = label, x= 0, y = 250, hjust = 0), 
						color = "black", size = 2.8) + theme_bw() + 
	theme(legend.position = "bottom", strip.text.x = element_text(size=15))

metac %>% filter(meta.id == 101436) %>% select(comparison.name, outcome.name, sungroup.name, est.fixef, est.copas, 
																							 est.trimfill.fixef, est.reg.ranef, est.copas)
par(mfrow = c(1,3))
funnel(meta.id(101436))
funnel(trimfill(meta.id(101436)))
funnel(limitmeta(meta.id(101436)))

print(effect.diff %>% group_by(fixef.reg) %>% mutate(dif = abs(est.fixef - est.reg.ranef)) %>% 
				filter(dif > 3) %>% mutate(label = round(dif, 1), type = !is.na(est.fixef.bin)) %>% 
				arrange(label) %>% select(label, type, meta.id, comparison.name, outcome.name), n = 200)



#Scatterplots of metac-analysis and corrected log(abs(abs estimates
ranef.fixef.sc.effect <- metac %>% ggplot(aes(x = log(abs((est.fixef))), y = log(abs(est.ranef)))) + geom_point() + 
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + 
	xlab("Fixed effects log estimate") + ylab("Random effects log estimate") + ggtitle("Fixed effects to Random effects")

# metac %>% ggplot(aes(y = log(abs((est.ranef))), x = log(abs(est.trimfill.fixef)))) + geom_point() + 
# 	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + 
# 	xlab("Random effects log estimate") + ylab("Trimfill log estimate") + ggtitle("Random effects to Trimfill")


#Scatterplots of metac-analysis and corrected log(abs(abs estimates
trimfill.fixef.sc.effect <- metac %>% ggplot(aes(x = log(abs((est.fixef))), y = log(abs(est.trimfill.fixef)))) + geom_point() + 
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + 
	xlab("Fixed effects log estimate") + ylab("Trimfill log estimate") + ggtitle("Fixed effects to Trimfill")

trimfill.ranef.sc.effect <- metac %>% ggplot(aes(x = log(abs((est.ranef))), y = log(abs(est.trimfill.fixef)))) + geom_point() + 
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + 
	xlab("Random effects log estimate") + ylab("Trimfill log estimate") + ggtitle("Random effects to Trimfill")


#Scatterplots of metac-analysis and corrected log estimates
copas.fixef.sc.effect <- metac %>% ggplot(aes(x = log(abs((est.fixef))), y = log(abs(est.copas)))) + geom_point() + 
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + xlim(0, 25) +
	xlab("Fixed effects log estimate") + ylab("Copas log estimate") + ggtitle("Fixed effects to Copas") 

copas.ranef.sc.effect <- metac %>% ggplot(aes(x = log(abs((est.ranef))), y = log(abs(est.copas)))) + geom_point() + 
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE, show.legend = T) + xlim(0, 20) +
	xlab("Random effects log estimate") + ylab("Copas log estimate") + ggtitle("Random effects to Copas") 


#Scatterplots of metac-analysis and corrected log estimates
reg.fixef.sc.effect <- metac %>% ggplot(aes(x = log(abs((est.fixef))), y = log(abs(est.reg.ranef)))) + geom_point() + 
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + 
	xlab("Fixed effects log estimate") + ylab("Regression log estimate") + ggtitle("Fixed effects to Regression")

reg.ranef.sc.effect <- metac %>% ggplot(aes(x = log(abs((est.ranef))), y = log(abs(est.reg.ranef)))) + geom_point() + 
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + 
	xlab("Random effects log estimate") + ylab("Regression log estimate") + ggtitle("Random effects to Regression")


#Scatterplots of test- statistics:
ranef.fixef.sc.zval <- metac %>% ggplot(aes(x = abs(zval.fixef), y = abs(zval.ranef))) + geom_point() +
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + theme_bw() + 
	ggtitle("Fixed effects and Random effects z statistics") + ylab("Random effects statistic") + xlab("Fixed effects statistic")

metac %>% ggplot(aes(x = abs(zval.fixef), y = abs(zval.trimfill.fixef))) + geom_point() +
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + theme_bw() + 
	ggtitle("Fixed effects and Random effects z statistics") + ylab("Random effects statistic") + xlab("Fixed effects statistic")


#Scatterplots of test- statistics:
trimfill.fixef.sc.zval <- metac %>% ggplot(aes(x = abs(zval.fixef), y = abs(zval.trimfill.fixef))) + geom_point() +
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + theme_bw() + 
	ggtitle("Fixed effects and trimfill z statistics") + ylab("Trimfill  statistic") + xlab("Fixed effects  statistic")

trimfill.ranef.sc.zval <- metac %>% ggplot(aes(x = abs(zval.ranef), y = abs(zval.trimfill.fixef))) + geom_point() +
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + theme_bw() + 
	ggtitle("Random effects and trimfill z statistics") + ylab("Trimfill statistic") + xlab("Random effects  statistic")

#Scatterplots of test- statistics:
copas.fixef.sc.zval <- metac %>% ggplot(aes(x = abs(zval.fixef), y = abs(zval.copas))) + geom_point() +
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + theme_bw() + 
	ggtitle("Fixed effects and Copas z statistics") + ylab("Copas  statistic") + xlab("Fixed effects  statistic")

copas.ranef.sc.zval <- metac %>% ggplot(aes(x = abs(zval.ranef), y = abs(zval.copas))) + geom_point() +
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + theme_bw() + 
	ggtitle("Random effects and Copas z statistics") + ylab("Copas  statistic") + xlab("Random effects  statistic")

#Scatterplots of test- statistics:
reg.fixef.sc.zval <- metac %>% ggplot(aes(x = abs(zval.fixef), y = abs(zval.reg.ranef))) + geom_point() +
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + theme_bw() + 
	ggtitle("Fixed effects and Regression z statistics") + ylab("Regression  statistic") + xlab("Fixed effects  statistic")

reg.ranef.sc.zval <- metac %>% ggplot(aes(x = abs(zval.ranef), y = abs(zval.reg.ranef))) + geom_point() +
	geom_abline(slope = 1, color = "red") + geom_smooth(method = "lm", se = FALSE) + theme_bw() + 
	ggtitle("Random effects and Regression z statistics") + ylab("Regression  statistic") + xlab("Random effects  statistic")

#Missing study proportions:
p.missing.copas <- metac %>% ggplot(aes(x = missing.copas/n)) + geom_histogram(bins = 20) + 
	xlim(0, 0.5) + ylim(0, 200) + xlab("Proportion of missing studies") + ggtitle("Copas selection model") + theme_bw()
p.missing.trim <- metac %>% ggplot(aes(x = missing.trim)) + geom_histogram(bins = 20) + 
	xlim(0, 0.5) + ylim(0, 200) + xlab("Proportion of missing studies") + ggtitle("Trim-and-fill") + theme_bw()
@


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
\begin{document}
\maketitle
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 

% \begin{frame}{Evidence Synthesis}
% Summarise evidence over fields and studies
% 
% Quantitatively by meta-analysis
% 
% \end{frame}

\begin{frame}{Publication Bias}
Availability of studies depends on the effect sizes thereof

Thesis topic: Abundancy and extent of publication bias in clinical science
\end{frame}

\begin{frame}{Cochrane Organisation}
Aim: summarise findings in primary clinical research and health care

Provide peer-reviewed, systematic reviews

Public access (for some countries)
\end{frame}


\begin{frame}{Cochrane Library Dataset}
\Sexpr{format(length(unique(data$file.nr)), big.mark=",")} systematic reviews with studies published until 2018.

\Sexpr{format(length(unique(data$study.name)), big.mark=",")} studies.

\Sexpr{format(dim(data)[1], big.mark=",")} study results.
\end{frame}


\begin{frame}[fragile]{Review Example: Binary Outcome}
Barbiturate efficacy for head injury treatment
\vspace{-5mm}
<<echo = FALSE, results = 'asis'>>=
print(xtable(barbi2, label = "barbiturates", digits = 0), include.rownames = F, size = "tiny")
@
\end{frame}



\begin{frame}{Dataset Structure}

\begin{figure}
\tikzstyle{every node}=[draw=black,thick,anchor=west,scale=.65]
\tikzstyle{selected}=[draw=red,fill=red!30]
\tikzstyle{optional}=[dashed,fill=gray!50]
\begin{tikzpicture}
[grow = right, anchor = west,
  growth parent anchor=east, % added code
  parent anchor=east, level distance=.5cm,
  sibling distance=2em, level 1/.style={sibling distance=2em}, level 2/.style={sibling distance=2em},
  level 3/.style={sibling distance=2em}, level 4/.style={sibling distance=1.2em}]
  \node {Review} [edge from parent fork right]
    child { node {Comparison 2}
      child { node {Outcome 2}}
      child { node {Outcome 1}
        child { node {Subgroup 2}}
        child { node {Subgroup 1}
          child  { node {Result 3}}
          child  { node {Result 2}}
          child  { node {Result 1}}
          }}
    }
    child [missing] {}
    child { node {Comparison 1}};
\end{tikzpicture}
%\caption{Structure of a hypothetical review with two different comparisons\label{review.structure}}
\label{review.structure}
\end{figure}
\end{frame}





\begin{frame}[fragile]{Dataset Properties}
Review or study level:
<<echo=FALSE, results = 'asis'>>=
print(xtable(dataset.properties, digits = 0, align = "lrrrr"), include.rownames = T, size = "footnotesize", hline = c(0,1,1,3))
@
\end{frame}



\begin{frame}{Meta-analysis}
Benefits:
\begin{itemize}
\item Summary of evidence (e.g. of a treatment effect)
\item More reliable evidence (?)
\end{itemize}

Assumptions:
\begin{itemize}
\item Identical study settings (can be relaxed)
\item Random sample of studies
\end{itemize}
\end{frame}




\begin{frame}{Small Study Effects}
``The tendency for the smaller studies to show larger treatment effects'' \citep{Sterne}
\end{frame}


\begin{frame}{Small Study Effects}
Causes:
\begin{itemize}
\item Selective publication of studies with significant results - publication bias
\item Selective reporting of most favorable outcomes
\item Systematic differences in study settings
\end{itemize}
\end{frame}


\begin{frame}{Small Study Effect Tests}
Different approaches:
\begin{itemize}
\item Simple linear regression
\item Rank correlation
\end{itemize}

Special methods for binary outcomes	
\end{frame}


% \begin{frame}[fragile]{Small Study Effect Tests}
% Funnel plots (continuous outcome examples):
% 
% \vspace{-1.2cm}
% 
% <<message = FALSE, echo=FALSE, warning = FALSE, fig.height=4>>=
% par(las = 1, mfrow = c(1, 2))
% funnel(meta.example)
% funnel(meta.nexample)
% @
% 
% \end{frame}
% 
% 
% \begin{frame}[fragile]{Regression based Tests}
% Radial plots (continuous outcome examples):
% 
% \vspace{-1.1cm}
% 
% <<message = FALSE, echo=FALSE, warning = FALSE, fig.height=4>>=
% par(las = 1, mfrow = c(1,2))
% biased.rev$inv <- 1/biased.rev$se
% plot(y = (biased.rev$effect/biased.rev$se), x = (biased.rev$se^-1), xlim = c(0, 6), xlab = "inverse standard error", 
% 		 ylab = "mean diff. / std. error")
% 
% unbiased.rev$inv <- 1/unbiased.rev$se
% plot(y = (unbiased.rev$effect/unbiased.rev$se), x = (unbiased.rev$inv), xlim = c(0, 1.2), 
% 		 ylim = c(-18, 0), xlab = "inverse standard error", ylab = "mean diff. / std. error")
% @
% 
% \end{frame}


\begin{frame}{Regression based Tests}
studies $i,.. ,n$, effects $\theta_i$ and variances $v_i$, s.e. $s_i$

$\theta_M$ is the pooled effect and $\tau^2$ the between-study variance.

Let $y_{i} = \theta_{i}/_{i}$ and $x_i = 1/s_i$
\begin{itemize}
\item \citet{Egger} : Simple linear regression \\ $y_i = \beta_0 + \beta_1 x_i, \epsilon_i \sim N(0, \sigma)$
\item \citet{thompson.sharp} : extension of Egger with study weights $v_{i} + \tau^2$ 
\end{itemize}

\end{frame}

\begin{frame}[fragile]{Egger's Test examples}
Test for non-zero intercept $\beta_{0}$

\vspace{-1.1cm}
<<message = FALSE, echo=FALSE, warning = FALSE, fig.height=4>>=
par(las = 1, mfrow = c(1,2))
biased.rev$inv <- 1/biased.rev$se
m.ex <- lm(formula = (biased.rev$effect/biased.rev$se) ~ (biased.rev$inv))
plot(y = (biased.rev$effect/biased.rev$se), x = (biased.rev$se^-1), xlim = c(0, 6), xlab = "inverse standard error", 
		 ylab = "mean diff. / std. error")
abline(coef = coef(m.ex), lty = 2, col = 2)


unbiased.rev$inv <- 1/unbiased.rev$se
m.nex <- lm(formula = (unbiased.rev$effect/unbiased.rev$se) ~ (unbiased.rev$inv))
plot(y = (unbiased.rev$effect/unbiased.rev$se), x = (unbiased.rev$inv), xlim = c(0, 1.2), 
		 ylim = c(-18, 0), xlab = "inverse standard error", ylab = "mean diff. / std. error")
abline(coef = coef(m.nex), lty = 2, col = 2)
@
\end{frame}


\begin{frame}{Regression Tests for Binary Outcomes}

\begin{itemize}
\item \citet{Peters} :$x_i = 1/n_i$ instead $1/s_i$, inverse variances as weight.
\item \citet{Harbord} :$x_i$ = score of the log-likelihood of a proportion and inverse variances as weights.
\item \citet{Rucker} :Use arcsine variance stabilizing transformation for variances and effects, do e.g. Egger's test.
\end{itemize}
\end{frame}


\begin{frame}{Rank based tests}
\citet{begg.ties}: \\
Let $y_{i}$ be $frac{\theta_i - \theta_M}{v_i}$ and $x_i$ its variance ($\neq v_i$)

$u$ the number of pairs $(y_{i}, x_{i})$ ranked in the same order, $l$
the number of pairs in the opposite order

$Z = \frac{(u - l)}{\sqrt{n(n-1)(2n + 5)/18}}$  is a test statistic
\end{frame}

\begin{frame}{Rank based tests}
\citet{Schwarzer}: \\
$e_t$ number of events in the treatment group

$E_t$ follows hypergeometric distribution: calculate $\mathbb{E}(E_{t})$ and variances

proceed as in \citet{begg.ties}
\end{frame}


\begin{frame}{Test Results}
Inclusion criteria (from \citet{Ioannidis2007}):
\begin{itemize}
\item $n \geq 10$
\item at least one statistically significant effect in a study
\item $\frac{\sigma_{\textrm{max}}^2}{\sigma_{\textrm{min}}^2} > 4$
\item $I^2 < 0.5$
\end{itemize}

From \Sexpr{dim(meta)[1]} with $n \geq 10$, \Sexpr{dim(metac)[1]} remain.
\end{frame}



\begin{frame}[fragile]{Continuous Outcome Test Results}
$p$-values distribution, $n$ = \Sexpr{dim(metac.cont)[1]}:

\vspace{-2mm}
<<echo = FALSE, fig.height = 4, message = FALSE>>=
plot(p.dist.cont)
@
\end{frame}

\begin{frame}[fragile]{Binary Outcome Test Results}
$p$-values distribution, $n$ = \Sexpr{dim(metac.bin)[1]}:

\vspace{-2mm}
<<echo = FALSE, fig.height = 3.6, message = FALSE>>=
plot(p.dist.bin)
@
\end{frame}

\begin{frame}[fragile]{Agreement in significance}
Number of significant test results per meta-analysis:

\vspace{-2mm}
<<echo = FALSE, fig.height = 3.2, message = FALSE>>=
grid.arrange(agree.cont, agree.bin, ncol = 2)
@
\end{frame}

\begin{frame}{Small Study Effect Adjustment}
Three methods:
\begin{itemize}
\item Regression
\item Copas selection model
\item Trim-and-fill
\end{itemize}
\end{frame}

\begin{frame}{Adjustment by regression}
$y_i = \theta_i/s_i, x_i = 1/s_i$

$y_i = \beta_0 + \beta_1 x_i, \epsilon_i \sim N(0, \sigma)$

$\beta_{1}$ is the weighted mean treatment effect if $\beta_{0} = 0$
\end{frame}


\begin{frame}{Adjustment by regression}
Radial plots (continuous outcome examples):

\vspace{-1.1cm}

<<message = FALSE, echo=FALSE, warning = FALSE, fig.height=4>>=
par(las = 1, mfrow = c(1,2))
biased.rev$inv <- 1/biased.rev$se
m.ex.0 <- lm(formula = (biased.rev$effect/biased.rev$se) ~ 0 + (biased.rev$inv))
m.ex <- lm(formula = (biased.rev$effect/biased.rev$se) ~ (biased.rev$inv))
plot(y = (biased.rev$effect/biased.rev$se), x = (biased.rev$se^-1), xlim = c(0, 6), xlab = "inverse standard error", 
		 ylab = "mean diff. / std. error")
abline(coef = c(0,coef(m.ex.0)), lty = 2)
abline(coef = coef(m.ex), lty = 2, col = 2)


unbiased.rev$inv <- 1/unbiased.rev$se
m.nex.0 <- lm(formula = (unbiased.rev$effect/unbiased.rev$se) ~ 0 + (unbiased.rev$inv))
m.nex <- lm(formula = (unbiased.rev$effect/unbiased.rev$se) ~ (unbiased.rev$inv))
plot(y = (unbiased.rev$effect/unbiased.rev$se), x = (unbiased.rev$inv), xlim = c(0, 1), 
		 ylim = c(-18, 0), xlab = "inverse standard error", ylab = "mean diff. / std. error")
abline(coef = c(0,coef(m.nex.0)), lty = 2)
abline(coef = coef(m.nex), lty = 2, col = 2)
@
\end{frame}



\begin{frame}[fragile]{Limit Meta-Analysis}
Extended random effects model:

\vspace{-4mm}
\begin{align}
y_{i} = \beta_{0} + \beta_{1}(\sqrt{v_{i} + \tau^2}) + \epsilon_{i}(\sqrt{v_{i} + \tau^2}), \nonumber \\
\epsilon_{i} \stackrel{\textrm{iid}}{\sim} N(0,1) \nonumber
\end{align}

Use $\mathbb{E}(y_{i}) \rightarrow \beta_{0} + \beta_{1}\tau$ for $\sqrt{v_{i}} \rightarrow 0$
as corrected treatment efffect.
\end{frame}



\begin{frame}[fragile]{Limit Meta-Analysis}
Funnel plot with effect with infinite precision:

\vspace{-1.1cm}
<<message = FALSE, echo=FALSE, warning = FALSE, fig.height=4>>=
par(las = 1, mfrow = c(1,2))
funnel(limitmeta(meta.example))
funnel(limitmeta(meta.nexample))
@
\end{frame}



\begin{frame}{Selection model}
\citet{Copas1}: model based on a bivariate normal distribution:

\vspace{-8mm}
\begin{align}
y_{i} = \mu_{i} + \sigma_{i}\epsilon_{i} \label{population.model} \\
\mu_{i} \sim N(\mu, \tau^2) \label{population.model} \\
z_{i} = a + b/s_{i} + \delta_{i} \label{selection.model}
\end{align}

\ref{population.model} is called population model, \ref{selection.model} the selection model

$(\epsilon_{i}, \delta_{i})$ are standard normal residuals with correlation $\rho = cor(y_{i}, z_{i})$.
\end{frame}


\begin{frame}[fragile]{Sensitivity Analysis}
Model the selection process with different $a,b$

Test if small study effect is significant, by including \\ $y_{i} = \mu_{i} + \beta s_{i} + \sigma_{i}\epsilon_{i}$

Estimation: Select $a, b$ such that $H0$ can not be rejected and estimated
number of unpublished studies is minimal.
\end{frame}


\begin{frame}{Trim-and-Fill}
Mirror studies that cause asymmetry:
\vspace{-1.2cm}

<<message = FALSE, echo=FALSE, warning = FALSE, fig.height=4>>=
par(las = 1, mfrow = c(1, 2))
funnel(meta.example)
funnel(meta.nexample)
@
\end{frame}

\begin{frame}[fragile]{Results:}
Difference between random and fixed effects meta-analysis estimate:

\vspace{-3mm}
<<echo = FALSE, fig.height = 3.6, message = FALSE, warning=FALSE>>=
plot(hist.ranef)
@
\end{frame}


\begin{frame}[fragile]{Adjustment Results: Trim-and-fill}
Difference between adjusted and fixed effects meta-analysis estimate:

\vspace{-3mm}
<<echo = FALSE, fig.height = 3.6, message = FALSE, warning=FALSE>>=
plot(hist.trimfill1)
@
\end{frame}


\begin{frame}[fragile]{Adjustment Results: Copas}
Difference between adjusted and fixed effects meta-analysis estimate:

\vspace{-3mm}
<<echo = FALSE, fig.height = 3.6, message = FALSE, warning=FALSE>>=
plot(hist.copas1)
@
\end{frame}


\begin{frame}[fragile]{Adjustment Results: Regression}
Difference between adjusted and fixed effects meta-analysis estimate:

\vspace{-3mm}
<<echo = FALSE, fig.height = 3.6, message = FALSE, warning=FALSE>>=
plot(hist.reg1)
@
\end{frame}


\begin{frame}[fragile]{Results:}
Random and fixed effects meta-analyses test statistics:

\vspace{-3mm} 
<<echo = FALSE, fig.height = 3.8, message = FALSE, warning=FALSE>>=
plot(ranef.fixef.sc.zval)
@
\end{frame}


\begin{frame}[fragile]{Adjustment Results: Trim-and-fill}
Adjusted and meta-analysis test statistics:

\vspace{-3mm} 
<<echo = FALSE, fig.height = 3.8, message = FALSE, warning=FALSE>>=
grid.arrange(trimfill.fixef.sc.zval, trimfill.ranef.sc.zval, ncol = 2)
@
\end{frame}


\begin{frame}[fragile]{Adjustment Results: Copas}
Adjusted and meta-analysis test statistics:

\vspace{-3mm}
<<echo = FALSE, fig.height = 3.8, message = FALSE, warning=FALSE>>=
grid.arrange(copas.fixef.sc.zval, copas.ranef.sc.zval, ncol = 2)
@
\end{frame}


\begin{frame}[fragile]{Adjustment Results: Regression}
Adjusted and meta-analysis test statistics:

\vspace{-3mm}
<<echo = FALSE, fig.height = 3.8, message = FALSE, warning=FALSE>>=
grid.arrange(reg.fixef.sc.zval, reg.ranef.sc.zval, ncol = 2)
@
\end{frame}


\begin{frame}[fragile]{Adjustment Results}
Missing study proportions:

\vspace{-3mm}
<<echo = FALSE, fig.height = 3.8, message = FALSE, warning=FALSE>>=
grid.arrange(p.missing.copas, p.missing.trim, ncol = 2) 
@
\end{frame}

\begin{frame}[fragile]{Extreme Results}
RR reduction by trimfill (-3.9), side effects

<<echo = FALSE, fig.height = 3.5>>=
trimfill.id(165815)
@
\end{frame}

\begin{frame}[fragile]{Extreme Results}
RR Reduction by copas selection model (-4), pain relief

<<echo = FALSE, fig.height = 3.5>>=
funnel.id(73169)
@
\end{frame}

\begin{frame}[fragile]{Extreme Results}
RR Amplification by regression (+14), side effects

<<echo = FALSE, fig.height = 3.5>>=
limitmeta.id(119537)
@
\end{frame}

\begin{frame}[fragile]{Discussion}
\begin{itemize}
\item Proportion of positive tests is well above 10\%
\item Effect sizes and evidence for treatment effect is diminishued
\item Limitations: not only primary outcomes, adjustment methods known to
perform poorly under the 0
\end{itemize}
\end{frame}


\begin{frame}[fragile]{Outlook}
\begin{itemize}
\item Connect results with different medical fields, look for differences
\item Connect results with single studies and journals (?)
\end{itemize}
\end{frame}













%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Backup Slides%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{frame}[fragile]{Adjustment Results: Trim-and-fill}
Treatment effect difference:

\vspace{-3mm}
<<echo = FALSE, fig.height = 4, message = FALSE, warning=FALSE>>=
plot(hist.trimfill)
@
\end{frame}


\begin{frame}[fragile]{Adjustment Results: Copas}
Treatment effect difference:

\vspace{-3mm}
<<echo = FALSE, fig.height = 4, message = FALSE, warning=FALSE>>=
plot(hist.copas)
@
\end{frame}


\begin{frame}[fragile]{Adjustment Results: Regression}
Treatment effect difference:

\vspace{-3mm}
<<echo = FALSE, fig.height = 4, message = FALSE, warning=FALSE>>=
plot(hist.reg)
@
\end{frame}

\begin{frame}[fragile]{Results}
log treatment effect estimates:

\vspace{-3mm}
<<echo = FALSE, fig.height = 4, message = FALSE, warning=FALSE>>=
plot(ranef.fixef.sc.effect)
@
\end{frame}

\begin{frame}[fragile]{Adjustment Results: Trim-and-fill}
log treatment effect estimates:

\vspace{-3mm}
<<echo = FALSE, fig.height = 4, message = FALSE, warning=FALSE>>=
grid.arrange(trimfill.fixef.sc.effect, trimfill.ranef.sc.effect, ncol = 2)
@
\end{frame}


\begin{frame}[fragile]{Adjustment Results: Copas}
log treatment effect estimates:

\vspace{-3mm}
<<echo = FALSE, fig.height = 4, message = FALSE, warning=FALSE>>=
grid.arrange(copas.fixef.sc.effect, copas.ranef.sc.effect, ncol = 2)
@
\end{frame}


\begin{frame}[fragile]{Adjustment Results: Regression}
log treatment effect estimates:

\vspace{-3mm}
<<echo = FALSE, fig.height = 4, message = FALSE, warning=FALSE>>=
grid.arrange(reg.fixef.sc.effect, reg.ranef.sc.effect, ncol = 2)
@
\end{frame}





\begin{frame}{References}
  \small
  \bibliographystyle{apalike}
\bibliography{illustration}
\end{frame}



%\appendix
%% Possible backup slides...

%% chapter division is accomplished with:
%% \part{Appendix}

% \begin{frame}[fragile]{Test Results: Significance}
% 
% <<echo = FALSE, fig.height = 4>>=
% grid.arrange(p.bin, p.cont, ncol = 2)
% @
% \end{frame}

% \begin{frame}[fragile]{Pooling Studies - Meta-Analysis}
% Multiple results in a meta-analysis group can be pooled:
% <<echo=FALSE, results = 'asis'>>=
% print(xtable(cum.repr.trials.subg, label = "repr.groups", align = "lrrr", digits = 0), include.rownames = F, size = "footnotesize")
% @
% \end{frame}

% \begin{frame}{Dataset Structure}
% \begin{itemize}
% \item Comparison: What is compared, e.g. treatment vs. control
% \item Outcome: How it is compared
% \item Subgroup: Subgroup affiliation
% \item Meta-Analysis Group: Results from same comparison, outcome and subgroup
% \end{itemize}
% \end{frame}

% \begin{frame}[fragile]{Dataset Properties}
% Missing data:
% <<echo=FALSE, results = 'asis'>>=
% print(xtable(missing.table, align = "lr"), include.rownames = T, include.colnames = F)
% @
% \end{frame}




% \begin{frame}{Adjustment by regression}
% Similar to the tests, but with unnormalized effect $y_{i}$:
% 
% \begin{align}
% y_{i} = \beta_{0} + \beta_{1}x_{i}
% \end{align}
% 
% $\beta_{0}$	 corresponds to $y_{i}$ with $x_{i} = 0$
% \end{frame}
% 
% \begin{frame}[fragile]{Adjustment by regression}
% Linear regression method:
% 
% <<echo = FALSE, fig.height = 3>>=
% grid.arrange(reg.1, reg.2, ncol = 2)
% @
% \end{frame}


% \begin{frame}[fragile]{Thompson and Sharp's Tests}
% Generalised radial plot with new standard error $x_i = s_i + \tau$
% 
% \vspace{-1.1cm}
% <<message = FALSE, echo=FALSE, warning = FALSE, fig.height= 4>>=
% par(las = 1, mfrow = c(1,2))
% tau.ex <- meta.example$tau
% biased.rev$inv <- 1/sqrt((biased.rev$se^2 + tau.ex^2))
% m.ex <- lm(formula = (biased.rev$effect*biased.rev$inv) ~ (biased.rev$inv), weights = biased.rev$se)
% biased.rev$inv <- 1/biased.rev$se
% plot(y = (biased.rev$effect/biased.rev$se), x = (biased.rev$inv), xlim = c(0, 4), xlab = "inverse standard error", 
% 		 ylab = "mean diff. / std. error")
% abline(coef = coef(m.ex), lty = 2, col = 2)
% 
% tau.nex <- meta.nexample$tau
% unbiased.rev$inv <- 1/sqrt((unbiased.rev$se^2 + tau.nex^2))
% m.nex <- lm(formula = (unbiased.rev$effect*unbiased.rev$inv) ~ (unbiased.rev$inv), weights = unbiased.rev$se)
% plot(y = (unbiased.rev$effect/unbiased.rev$se), x = (unbiased.rev$inv), xlim = c(0, .6), 
% 		 ylim = c(-18, 0), xlab = "inverse standard error", ylab = "mean diff. / std. error")
% abline(coef = coef(m.nex), lty = 2, col = 2)
% @
% 
% \end{frame}
% 
% 
% \begin{frame}[fragile]{Limit Meta-Analysis}
% \begin{align}
% y_{M,i} &= \beta_{0} + \beta_{1}(\sqrt{v_{i}/M + \tau^2}) + \epsilon_{i}(\sqrt{s_{i}/M + \tau^2}) \nonumber
% \end{align}
% 
% Letting $M \rightarrow \infty$ and substituting for all parameters and the observed residual
% 
% \vspace{-8mm}
% \begin{align}
% y_{\infty,i} &= \beta_{0} + \sqrt{\frac{\tau^2}{v_{i} + \tau^2}}(y_i - \beta_0)
% \end{align}
% \end{frame}
% 
% \begin{frame}[fragile]{Limit Meta-Analysis}
% By plugging in $s_i$ for $v_i$, $\hat{tau}$ for $\tau$ and $\hat{\beta_0}$, get new study effects:
% 
% Three different treatment effect estimates:
% \begin{itemize}
% \item Expectated adjusted treatment effect with infinite precision: $\hat{\beta_{0}^\star} + \hat{\beta_{1}}\hat{\tau}$
% \item Fixed effect estimate based on $(y_{\infty,1},.. , y_{\infty,n}$
% \item Slope $\beta_{\textrm{lim}}$ of best-fitting regression line in radial plot with $(y_{\infty,i}, s_{i})$
% \end{itemize}
% \end{frame}

\end{document}